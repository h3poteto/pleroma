{"version":3,"sources":["webpack:///core/admin.js","webpack:///app/javascript/mnt/gentoo/home/haelwenn/Sources/git/hacktivis.me/git/mastofe/app/javascript/core/admin.js","webpack:///./node_modules/rails-ujs/lib/assets/compiled/rails-ujs.js"],"names":["webpackJsonp","1125","module","__webpack_exports__","__webpack_require__","handleDeleteStatus","event","_event$detail","detail","data","element","document","querySelector","id","parentNode","removeChild","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_rails_ujs__","n","forEach","call","querySelectorAll","content","addEventListener","batchCheckboxClassName","_ref","target","checked","checkAllElement","every","indeterminate","some","click","571","exports","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","context","this","Rails","linkClickSelector","buttonClickSelector","selector","exclude","inputChangeSelector","formSubmitSelector","formInputClickSelector","formDisableSelector","formEnableSelector","fileInputSelector","linkDisableSelector","buttonDisableSelector","expando","m","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","getData","key","ref","setData","$","Array","slice","csrfParam","csrfToken","meta","CSRFProtection","xhr","token","setRequestHeader","refreshCSRFTokens","param","input","CustomEvent","fire","window","params","evt","createEvent","initCustomEvent","bubbles","cancelable","Event","obj","name","dispatchEvent","defaultPrevented","stopEverything","e","preventDefault","stopPropagation","stopImmediatePropagation","delegate","eventType","handler","AcceptHeaders","createXHR","prepareOptions","processResponse","*","text","html","xml","json","script","ajax","options","response","getResponseHeader","Math","floor","status","success","statusText","error","complete","beforeSend","readyState","XMLHttpRequest","OPENED","send","url","location","href","type","toUpperCase","indexOf","dataType","accept","done","open","crossDomain","withCredentials","onreadystatechange","DONE","parser","match","JSON","parse","createElement","head","appendChild","DOMParser","replace","parseFromString","isCrossDomain","originAnchor","urlAnchor","protocol","host","toArray","serializeElement","additionalParam","inputs","elements","option","selected","push","map","encodeURIComponent","join","formElements","form","filter","el","allowAction","handleConfirm","answer","callback","message","getAttribute","confirm","disableFormElement","disableFormElements","disableLinkElement","enableFormElement","enableFormElements","enableLinkElement","handleDisabledElement","disabled","enableElement","disableElement","replacement","innerHTML","originalText","removeEventListener","handleMethod","formContent","link","method","action","style","display","body","isRemote","handleRemote","button","enctype","FormData","append","abort","args","arguments","length","formSubmitButtonClick","formNoValidate","handleMetaClick","metaKey","ctrlKey","jQuery","rails","ajaxPrefilter","originalOptions","start","_rails_loaded","Error","setTimeout","undefined"],"mappings":"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","file":"core/admin.js","sourcesContent":["webpackJsonp([163],{\n\n/***/ 1125:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rails_ujs__ = __webpack_require__(571);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rails_ujs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rails_ujs__);\n//  This file will be loaded on admin pages, regardless of theme.\n\n\n\nfunction handleDeleteStatus(event) {\n  var _event$detail = event.detail,\n      data = _event$detail[0];\n\n  var element = document.querySelector('[data-id=\"' + data.id + '\"]');\n  if (element) {\n    element.parentNode.removeChild(element);\n  }\n}\n\n[].forEach.call(document.querySelectorAll('.trash-button'), function (content) {\n  content.addEventListener('ajax:success', handleDeleteStatus);\n});\n\nvar batchCheckboxClassName = '.batch-checkbox input[type=\"checkbox\"]';\n\nObject(__WEBPACK_IMPORTED_MODULE_0_rails_ujs__[\"delegate\"])(document, '#batch_checkbox_all', 'change', function (_ref) {\n  var target = _ref.target;\n\n  [].forEach.call(document.querySelectorAll(batchCheckboxClassName), function (content) {\n    content.checked = target.checked;\n  });\n});\n\nObject(__WEBPACK_IMPORTED_MODULE_0_rails_ujs__[\"delegate\"])(document, batchCheckboxClassName, 'change', function () {\n  var checkAllElement = document.querySelector('#batch_checkbox_all');\n  if (checkAllElement) {\n    checkAllElement.checked = [].every.call(document.querySelectorAll(batchCheckboxClassName), function (content) {\n      return content.checked;\n    });\n    checkAllElement.indeterminate = !checkAllElement.checked && [].some.call(document.querySelectorAll(batchCheckboxClassName), function (content) {\n      return content.checked;\n    });\n  }\n});\n\nObject(__WEBPACK_IMPORTED_MODULE_0_rails_ujs__[\"delegate\"])(document, '.media-spoiler-show-button', 'click', function () {\n  [].forEach.call(document.querySelectorAll('button.media-spoiler'), function (element) {\n    element.click();\n  });\n});\n\nObject(__WEBPACK_IMPORTED_MODULE_0_rails_ujs__[\"delegate\"])(document, '.media-spoiler-hide-button', 'click', function () {\n  [].forEach.call(document.querySelectorAll('.spoiler-button.spoiler-button--visible button'), function (element) {\n    element.click();\n  });\n});\n\n/***/ }),\n\n/***/ 571:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\nUnobtrusive JavaScript\nhttps://github.com/rails/rails/blob/master/actionview/app/assets/javascripts\nReleased under the MIT license\n */\n\n(function () {\n  var context = this;\n\n  (function () {\n    (function () {\n      this.Rails = {\n        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',\n        buttonClickSelector: {\n          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',\n          exclude: 'form button'\n        },\n        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n        formSubmitSelector: 'form',\n        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n        fileInputSelector: 'input[name][type=file]:not([disabled])',\n        linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'\n      };\n    }).call(this);\n  }).call(context);\n\n  var Rails = context.Rails;\n\n  (function () {\n    (function () {\n      var expando, m;\n\n      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n      Rails.matches = function (element, selector) {\n        if (selector.exclude != null) {\n          return m.call(element, selector.selector) && !m.call(element, selector.exclude);\n        } else {\n          return m.call(element, selector);\n        }\n      };\n\n      expando = '_ujsData';\n\n      Rails.getData = function (element, key) {\n        var ref;\n        return (ref = element[expando]) != null ? ref[key] : void 0;\n      };\n\n      Rails.setData = function (element, key, value) {\n        if (element[expando] == null) {\n          element[expando] = {};\n        }\n        return element[expando][key] = value;\n      };\n\n      Rails.$ = function (selector) {\n        return Array.prototype.slice.call(document.querySelectorAll(selector));\n      };\n    }).call(this);\n    (function () {\n      var $, csrfParam, csrfToken;\n\n      $ = Rails.$;\n\n      csrfToken = Rails.csrfToken = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-token]');\n        return meta && meta.content;\n      };\n\n      csrfParam = Rails.csrfParam = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-param]');\n        return meta && meta.content;\n      };\n\n      Rails.CSRFProtection = function (xhr) {\n        var token;\n        token = csrfToken();\n        if (token != null) {\n          return xhr.setRequestHeader('X-CSRF-Token', token);\n        }\n      };\n\n      Rails.refreshCSRFTokens = function () {\n        var param, token;\n        token = csrfToken();\n        param = csrfParam();\n        if (token != null && param != null) {\n          return $('form input[name=\"' + param + '\"]').forEach(function (input) {\n            return input.value = token;\n          });\n        }\n      };\n    }).call(this);\n    (function () {\n      var CustomEvent, fire, matches;\n\n      matches = Rails.matches;\n\n      CustomEvent = window.CustomEvent;\n\n      if (typeof CustomEvent !== 'function') {\n        CustomEvent = function (event, params) {\n          var evt;\n          evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n          return evt;\n        };\n        CustomEvent.prototype = window.Event.prototype;\n      }\n\n      fire = Rails.fire = function (obj, name, data) {\n        var event;\n        event = new CustomEvent(name, {\n          bubbles: true,\n          cancelable: true,\n          detail: data\n        });\n        obj.dispatchEvent(event);\n        return !event.defaultPrevented;\n      };\n\n      Rails.stopEverything = function (e) {\n        fire(e.target, 'ujs:everythingStopped');\n        e.preventDefault();\n        e.stopPropagation();\n        return e.stopImmediatePropagation();\n      };\n\n      Rails.delegate = function (element, selector, eventType, handler) {\n        return element.addEventListener(eventType, function (e) {\n          var target;\n          target = e.target;\n          while (!(!(target instanceof Element) || matches(target, selector))) {\n            target = target.parentNode;\n          }\n          if (target instanceof Element && handler.call(target, e) === false) {\n            e.preventDefault();\n            return e.stopPropagation();\n          }\n        });\n      };\n    }).call(this);\n    (function () {\n      var AcceptHeaders, CSRFProtection, createXHR, fire, prepareOptions, processResponse;\n\n      CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;\n\n      AcceptHeaders = {\n        '*': '*/*',\n        text: 'text/plain',\n        html: 'text/html',\n        xml: 'application/xml, text/xml',\n        json: 'application/json, text/javascript',\n        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'\n      };\n\n      Rails.ajax = function (options) {\n        var xhr;\n        options = prepareOptions(options);\n        xhr = createXHR(options, function () {\n          var response;\n          response = processResponse(xhr.response, xhr.getResponseHeader('Content-Type'));\n          if (Math.floor(xhr.status / 100) === 2) {\n            if (typeof options.success === \"function\") {\n              options.success(response, xhr.statusText, xhr);\n            }\n          } else {\n            if (typeof options.error === \"function\") {\n              options.error(response, xhr.statusText, xhr);\n            }\n          }\n          return typeof options.complete === \"function\" ? options.complete(xhr, xhr.statusText) : void 0;\n        });\n        if (typeof options.beforeSend === \"function\") {\n          options.beforeSend(xhr, options);\n        }\n        if (xhr.readyState === XMLHttpRequest.OPENED) {\n          return xhr.send(options.data);\n        } else {\n          return fire(document, 'ajaxStop');\n        }\n      };\n\n      prepareOptions = function (options) {\n        options.url = options.url || location.href;\n        options.type = options.type.toUpperCase();\n        if (options.type === 'GET' && options.data) {\n          if (options.url.indexOf('?') < 0) {\n            options.url += '?' + options.data;\n          } else {\n            options.url += '&' + options.data;\n          }\n        }\n        if (AcceptHeaders[options.dataType] == null) {\n          options.dataType = '*';\n        }\n        options.accept = AcceptHeaders[options.dataType];\n        if (options.dataType !== '*') {\n          options.accept += ', */*; q=0.01';\n        }\n        return options;\n      };\n\n      createXHR = function (options, done) {\n        var xhr;\n        xhr = new XMLHttpRequest();\n        xhr.open(options.type, options.url, true);\n        xhr.setRequestHeader('Accept', options.accept);\n        if (typeof options.data === 'string') {\n          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        }\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n        CSRFProtection(xhr);\n        xhr.withCredentials = !!options.withCredentials;\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === XMLHttpRequest.DONE) {\n            return done(xhr);\n          }\n        };\n        return xhr;\n      };\n\n      processResponse = function (response, type) {\n        var parser, script;\n        if (typeof response === 'string' && typeof type === 'string') {\n          if (type.match(/\\bjson\\b/)) {\n            try {\n              response = JSON.parse(response);\n            } catch (error) {}\n          } else if (type.match(/\\b(?:java|ecma)script\\b/)) {\n            script = document.createElement('script');\n            script.text = response;\n            document.head.appendChild(script).parentNode.removeChild(script);\n          } else if (type.match(/\\b(xml|html|svg)\\b/)) {\n            parser = new DOMParser();\n            type = type.replace(/;.+/, '');\n            try {\n              response = parser.parseFromString(response, type);\n            } catch (error) {}\n          }\n        }\n        return response;\n      };\n\n      Rails.href = function (element) {\n        return element.href;\n      };\n\n      Rails.isCrossDomain = function (url) {\n        var e, originAnchor, urlAnchor;\n        originAnchor = document.createElement('a');\n        originAnchor.href = location.href;\n        urlAnchor = document.createElement('a');\n        try {\n          urlAnchor.href = url;\n          return !((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host || originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host);\n        } catch (error) {\n          e = error;\n          return true;\n        }\n      };\n    }).call(this);\n    (function () {\n      var matches, toArray;\n\n      matches = Rails.matches;\n\n      toArray = function (e) {\n        return Array.prototype.slice.call(e);\n      };\n\n      Rails.serializeElement = function (element, additionalParam) {\n        var inputs, params;\n        inputs = [element];\n        if (matches(element, 'form')) {\n          inputs = toArray(element.elements);\n        }\n        params = [];\n        inputs.forEach(function (input) {\n          if (!input.name) {\n            return;\n          }\n          if (matches(input, 'select')) {\n            return toArray(input.options).forEach(function (option) {\n              if (option.selected) {\n                return params.push({\n                  name: input.name,\n                  value: option.value\n                });\n              }\n            });\n          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {\n            return params.push({\n              name: input.name,\n              value: input.value\n            });\n          }\n        });\n        if (additionalParam) {\n          params.push(additionalParam);\n        }\n        return params.map(function (param) {\n          if (param.name != null) {\n            return encodeURIComponent(param.name) + \"=\" + encodeURIComponent(param.value);\n          } else {\n            return param;\n          }\n        }).join('&');\n      };\n\n      Rails.formElements = function (form, selector) {\n        if (matches(form, 'form')) {\n          return toArray(form.elements).filter(function (el) {\n            return matches(el, selector);\n          });\n        } else {\n          return toArray(form.querySelectorAll(selector));\n        }\n      };\n    }).call(this);\n    (function () {\n      var allowAction, fire, stopEverything;\n\n      fire = Rails.fire, stopEverything = Rails.stopEverything;\n\n      Rails.handleConfirm = function (e) {\n        if (!allowAction(this)) {\n          return stopEverything(e);\n        }\n      };\n\n      allowAction = function (element) {\n        var answer, callback, message;\n        message = element.getAttribute('data-confirm');\n        if (!message) {\n          return true;\n        }\n        answer = false;\n        if (fire(element, 'confirm')) {\n          try {\n            answer = confirm(message);\n          } catch (error) {}\n          callback = fire(element, 'confirm:complete', [answer]);\n        }\n        return answer && callback;\n      };\n    }).call(this);\n    (function () {\n      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, matches, setData, stopEverything;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;\n\n      Rails.handleDisabledElement = function (e) {\n        var element;\n        element = this;\n        if (element.disabled) {\n          return stopEverything(e);\n        }\n      };\n\n      Rails.enableElement = function (e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return enableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {\n          return enableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return enableFormElements(element);\n        }\n      };\n\n      Rails.disableElement = function (e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return disableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {\n          return disableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return disableFormElements(element);\n        }\n      };\n\n      disableLinkElement = function (element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          setData(element, 'ujs:enable-with', element.innerHTML);\n          element.innerHTML = replacement;\n        }\n        element.addEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableLinkElement = function (element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          element.innerHTML = originalText;\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.removeEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', null);\n      };\n\n      disableFormElements = function (form) {\n        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);\n      };\n\n      disableFormElement = function (element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          if (matches(element, 'button')) {\n            setData(element, 'ujs:enable-with', element.innerHTML);\n            element.innerHTML = replacement;\n          } else {\n            setData(element, 'ujs:enable-with', element.value);\n            element.value = replacement;\n          }\n        }\n        element.disabled = true;\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableFormElements = function (form) {\n        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);\n      };\n\n      enableFormElement = function (element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          if (matches(element, 'button')) {\n            element.innerHTML = originalText;\n          } else {\n            element.value = originalText;\n          }\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.disabled = false;\n        return setData(element, 'ujs:disabled', null);\n      };\n    }).call(this);\n    (function () {\n      var stopEverything;\n\n      stopEverything = Rails.stopEverything;\n\n      Rails.handleMethod = function (e) {\n        var csrfParam, csrfToken, form, formContent, href, link, method;\n        link = this;\n        method = link.getAttribute('data-method');\n        if (!method) {\n          return;\n        }\n        href = Rails.href(link);\n        csrfToken = Rails.csrfToken();\n        csrfParam = Rails.csrfParam();\n        form = document.createElement('form');\n        formContent = \"<input name='_method' value='\" + method + \"' type='hidden' />\";\n        if (csrfParam != null && csrfToken != null && !Rails.isCrossDomain(href)) {\n          formContent += \"<input name='\" + csrfParam + \"' value='\" + csrfToken + \"' type='hidden' />\";\n        }\n        formContent += '<input type=\"submit\" />';\n        form.method = 'post';\n        form.action = href;\n        form.target = link.target;\n        form.innerHTML = formContent;\n        form.style.display = 'none';\n        document.body.appendChild(form);\n        form.querySelector('[type=\"submit\"]').click();\n        return stopEverything(e);\n      };\n    }).call(this);\n    (function () {\n      var ajax,\n          fire,\n          getData,\n          isCrossDomain,\n          isRemote,\n          matches,\n          serializeElement,\n          setData,\n          stopEverything,\n          slice = [].slice;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;\n\n      isRemote = function (element) {\n        var value;\n        value = element.getAttribute('data-remote');\n        return value != null && value !== 'false';\n      };\n\n      Rails.handleRemote = function (e) {\n        var button, data, dataType, element, method, url, withCredentials;\n        element = this;\n        if (!isRemote(element)) {\n          return true;\n        }\n        if (!fire(element, 'ajax:before')) {\n          fire(element, 'ajax:stopped');\n          return false;\n        }\n        withCredentials = element.getAttribute('data-with-credentials');\n        dataType = element.getAttribute('data-type') || 'script';\n        if (matches(element, Rails.formSubmitSelector)) {\n          button = getData(element, 'ujs:submit-button');\n          method = getData(element, 'ujs:submit-button-formmethod') || element.method;\n          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;\n          if (method.toUpperCase() === 'GET') {\n            url = url.replace(/\\?.*$/, '');\n          }\n          if (element.enctype === 'multipart/form-data') {\n            data = new FormData(element);\n            if (button != null) {\n              data.append(button.name, button.value);\n            }\n          } else {\n            data = serializeElement(element, button);\n          }\n          setData(element, 'ujs:submit-button', null);\n          setData(element, 'ujs:submit-button-formmethod', null);\n          setData(element, 'ujs:submit-button-formaction', null);\n        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {\n          method = element.getAttribute('data-method');\n          url = element.getAttribute('data-url');\n          data = serializeElement(element, element.getAttribute('data-params'));\n        } else {\n          method = element.getAttribute('data-method');\n          url = Rails.href(element);\n          data = element.getAttribute('data-params');\n        }\n        ajax({\n          type: method || 'GET',\n          url: url,\n          data: data,\n          dataType: dataType,\n          beforeSend: function (xhr, options) {\n            if (fire(element, 'ajax:beforeSend', [xhr, options])) {\n              return fire(element, 'ajax:send', [xhr]);\n            } else {\n              fire(element, 'ajax:stopped');\n              return xhr.abort();\n            }\n          },\n          success: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:success', args);\n          },\n          error: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:error', args);\n          },\n          complete: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:complete', args);\n          },\n          crossDomain: isCrossDomain(url),\n          withCredentials: withCredentials != null && withCredentials !== 'false'\n        });\n        return stopEverything(e);\n      };\n\n      Rails.formSubmitButtonClick = function (e) {\n        var button, form;\n        button = this;\n        form = button.form;\n        if (!form) {\n          return;\n        }\n        if (button.name) {\n          setData(form, 'ujs:submit-button', {\n            name: button.name,\n            value: button.value\n          });\n        }\n        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);\n        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));\n        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));\n      };\n\n      Rails.handleMetaClick = function (e) {\n        var data, link, metaClick, method;\n        link = this;\n        method = (link.getAttribute('data-method') || 'GET').toUpperCase();\n        data = link.getAttribute('data-params');\n        metaClick = e.metaKey || e.ctrlKey;\n        if (metaClick && method === 'GET' && !data) {\n          return e.stopImmediatePropagation();\n        }\n      };\n    }).call(this);\n    (function () {\n      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMetaClick, handleMethod, handleRemote, refreshCSRFTokens;\n\n      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMetaClick = Rails.handleMetaClick, handleMethod = Rails.handleMethod;\n\n      if (typeof jQuery !== \"undefined\" && jQuery !== null && jQuery.ajax != null && !jQuery.rails) {\n        jQuery.rails = Rails;\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (!options.crossDomain) {\n            return CSRFProtection(xhr);\n          }\n        });\n      }\n\n      Rails.start = function () {\n        if (window._rails_loaded) {\n          throw new Error('rails-ujs has already been loaded!');\n        }\n        window.addEventListener('pageshow', function () {\n          $(Rails.formEnableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n          return $(Rails.linkDisableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n        });\n        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.linkClickSelector, 'click', handleMetaClick);\n        delegate(document, Rails.linkClickSelector, 'click', disableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleRemote);\n        delegate(document, Rails.linkClickSelector, 'click', handleMethod);\n        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.buttonClickSelector, 'click', disableElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);\n        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);\n        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);\n        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', function (e) {\n          return setTimeout(function () {\n            return disableElement(e);\n          }, 13);\n        });\n        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);\n        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);\n        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);\n        return window._rails_loaded = true;\n      };\n\n      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {\n        Rails.start();\n      }\n    }).call(this);\n  }).call(this);\n\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = Rails;\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (Rails),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}).call(this);\n\n/***/ })\n\n},[1125]);\n\n\n// WEBPACK FOOTER //\n// core/admin.js","//  This file will be loaded on admin pages, regardless of theme.\n\nimport { delegate } from 'rails-ujs';\n\nfunction handleDeleteStatus(event) {\n  const [data] = event.detail;\n  const element = document.querySelector(`[data-id=\"${data.id}\"]`);\n  if (element) {\n    element.parentNode.removeChild(element);\n  }\n}\n\n[].forEach.call(document.querySelectorAll('.trash-button'), (content) => {\n  content.addEventListener('ajax:success', handleDeleteStatus);\n});\n\nconst batchCheckboxClassName = '.batch-checkbox input[type=\"checkbox\"]';\n\ndelegate(document, '#batch_checkbox_all', 'change', ({ target }) => {\n  [].forEach.call(document.querySelectorAll(batchCheckboxClassName), (content) => {\n    content.checked = target.checked;\n  });\n});\n\ndelegate(document, batchCheckboxClassName, 'change', () => {\n  const checkAllElement = document.querySelector('#batch_checkbox_all');\n  if (checkAllElement) {\n    checkAllElement.checked = [].every.call(document.querySelectorAll(batchCheckboxClassName), (content) => content.checked);\n    checkAllElement.indeterminate = !checkAllElement.checked && [].some.call(document.querySelectorAll(batchCheckboxClassName), (content) => content.checked);\n  }\n});\n\ndelegate(document, '.media-spoiler-show-button', 'click', () => {\n  [].forEach.call(document.querySelectorAll('button.media-spoiler'), (element) => {\n    element.click();\n  });\n});\n\ndelegate(document, '.media-spoiler-hide-button', 'click', () => {\n  [].forEach.call(document.querySelectorAll('.spoiler-button.spoiler-button--visible button'), (element) => {\n    element.click();\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// app/javascript/mnt/gentoo/home/haelwenn/Sources/git/hacktivis.me/git/mastofe/app/javascript/core/admin.js","/*\nUnobtrusive JavaScript\nhttps://github.com/rails/rails/blob/master/actionview/app/assets/javascripts\nReleased under the MIT license\n */\n\n(function() {\n  var context = this;\n\n  (function() {\n    (function() {\n      this.Rails = {\n        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',\n        buttonClickSelector: {\n          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',\n          exclude: 'form button'\n        },\n        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n        formSubmitSelector: 'form',\n        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n        fileInputSelector: 'input[name][type=file]:not([disabled])',\n        linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'\n      };\n\n    }).call(this);\n  }).call(context);\n\n  var Rails = context.Rails;\n\n  (function() {\n    (function() {\n      var expando, m;\n\n      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n      Rails.matches = function(element, selector) {\n        if (selector.exclude != null) {\n          return m.call(element, selector.selector) && !m.call(element, selector.exclude);\n        } else {\n          return m.call(element, selector);\n        }\n      };\n\n      expando = '_ujsData';\n\n      Rails.getData = function(element, key) {\n        var ref;\n        return (ref = element[expando]) != null ? ref[key] : void 0;\n      };\n\n      Rails.setData = function(element, key, value) {\n        if (element[expando] == null) {\n          element[expando] = {};\n        }\n        return element[expando][key] = value;\n      };\n\n      Rails.$ = function(selector) {\n        return Array.prototype.slice.call(document.querySelectorAll(selector));\n      };\n\n    }).call(this);\n    (function() {\n      var $, csrfParam, csrfToken;\n\n      $ = Rails.$;\n\n      csrfToken = Rails.csrfToken = function() {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-token]');\n        return meta && meta.content;\n      };\n\n      csrfParam = Rails.csrfParam = function() {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-param]');\n        return meta && meta.content;\n      };\n\n      Rails.CSRFProtection = function(xhr) {\n        var token;\n        token = csrfToken();\n        if (token != null) {\n          return xhr.setRequestHeader('X-CSRF-Token', token);\n        }\n      };\n\n      Rails.refreshCSRFTokens = function() {\n        var param, token;\n        token = csrfToken();\n        param = csrfParam();\n        if ((token != null) && (param != null)) {\n          return $('form input[name=\"' + param + '\"]').forEach(function(input) {\n            return input.value = token;\n          });\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var CustomEvent, fire, matches;\n\n      matches = Rails.matches;\n\n      CustomEvent = window.CustomEvent;\n\n      if (typeof CustomEvent !== 'function') {\n        CustomEvent = function(event, params) {\n          var evt;\n          evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n          return evt;\n        };\n        CustomEvent.prototype = window.Event.prototype;\n      }\n\n      fire = Rails.fire = function(obj, name, data) {\n        var event;\n        event = new CustomEvent(name, {\n          bubbles: true,\n          cancelable: true,\n          detail: data\n        });\n        obj.dispatchEvent(event);\n        return !event.defaultPrevented;\n      };\n\n      Rails.stopEverything = function(e) {\n        fire(e.target, 'ujs:everythingStopped');\n        e.preventDefault();\n        e.stopPropagation();\n        return e.stopImmediatePropagation();\n      };\n\n      Rails.delegate = function(element, selector, eventType, handler) {\n        return element.addEventListener(eventType, function(e) {\n          var target;\n          target = e.target;\n          while (!(!(target instanceof Element) || matches(target, selector))) {\n            target = target.parentNode;\n          }\n          if (target instanceof Element && handler.call(target, e) === false) {\n            e.preventDefault();\n            return e.stopPropagation();\n          }\n        });\n      };\n\n    }).call(this);\n    (function() {\n      var AcceptHeaders, CSRFProtection, createXHR, fire, prepareOptions, processResponse;\n\n      CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;\n\n      AcceptHeaders = {\n        '*': '*/*',\n        text: 'text/plain',\n        html: 'text/html',\n        xml: 'application/xml, text/xml',\n        json: 'application/json, text/javascript',\n        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'\n      };\n\n      Rails.ajax = function(options) {\n        var xhr;\n        options = prepareOptions(options);\n        xhr = createXHR(options, function() {\n          var response;\n          response = processResponse(xhr.response, xhr.getResponseHeader('Content-Type'));\n          if (Math.floor(xhr.status / 100) === 2) {\n            if (typeof options.success === \"function\") {\n              options.success(response, xhr.statusText, xhr);\n            }\n          } else {\n            if (typeof options.error === \"function\") {\n              options.error(response, xhr.statusText, xhr);\n            }\n          }\n          return typeof options.complete === \"function\" ? options.complete(xhr, xhr.statusText) : void 0;\n        });\n        if (typeof options.beforeSend === \"function\") {\n          options.beforeSend(xhr, options);\n        }\n        if (xhr.readyState === XMLHttpRequest.OPENED) {\n          return xhr.send(options.data);\n        } else {\n          return fire(document, 'ajaxStop');\n        }\n      };\n\n      prepareOptions = function(options) {\n        options.url = options.url || location.href;\n        options.type = options.type.toUpperCase();\n        if (options.type === 'GET' && options.data) {\n          if (options.url.indexOf('?') < 0) {\n            options.url += '?' + options.data;\n          } else {\n            options.url += '&' + options.data;\n          }\n        }\n        if (AcceptHeaders[options.dataType] == null) {\n          options.dataType = '*';\n        }\n        options.accept = AcceptHeaders[options.dataType];\n        if (options.dataType !== '*') {\n          options.accept += ', */*; q=0.01';\n        }\n        return options;\n      };\n\n      createXHR = function(options, done) {\n        var xhr;\n        xhr = new XMLHttpRequest();\n        xhr.open(options.type, options.url, true);\n        xhr.setRequestHeader('Accept', options.accept);\n        if (typeof options.data === 'string') {\n          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        }\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n        CSRFProtection(xhr);\n        xhr.withCredentials = !!options.withCredentials;\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === XMLHttpRequest.DONE) {\n            return done(xhr);\n          }\n        };\n        return xhr;\n      };\n\n      processResponse = function(response, type) {\n        var parser, script;\n        if (typeof response === 'string' && typeof type === 'string') {\n          if (type.match(/\\bjson\\b/)) {\n            try {\n              response = JSON.parse(response);\n            } catch (error) {}\n          } else if (type.match(/\\b(?:java|ecma)script\\b/)) {\n            script = document.createElement('script');\n            script.text = response;\n            document.head.appendChild(script).parentNode.removeChild(script);\n          } else if (type.match(/\\b(xml|html|svg)\\b/)) {\n            parser = new DOMParser();\n            type = type.replace(/;.+/, '');\n            try {\n              response = parser.parseFromString(response, type);\n            } catch (error) {}\n          }\n        }\n        return response;\n      };\n\n      Rails.href = function(element) {\n        return element.href;\n      };\n\n      Rails.isCrossDomain = function(url) {\n        var e, originAnchor, urlAnchor;\n        originAnchor = document.createElement('a');\n        originAnchor.href = location.href;\n        urlAnchor = document.createElement('a');\n        try {\n          urlAnchor.href = url;\n          return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) || (originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host));\n        } catch (error) {\n          e = error;\n          return true;\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var matches, toArray;\n\n      matches = Rails.matches;\n\n      toArray = function(e) {\n        return Array.prototype.slice.call(e);\n      };\n\n      Rails.serializeElement = function(element, additionalParam) {\n        var inputs, params;\n        inputs = [element];\n        if (matches(element, 'form')) {\n          inputs = toArray(element.elements);\n        }\n        params = [];\n        inputs.forEach(function(input) {\n          if (!input.name) {\n            return;\n          }\n          if (matches(input, 'select')) {\n            return toArray(input.options).forEach(function(option) {\n              if (option.selected) {\n                return params.push({\n                  name: input.name,\n                  value: option.value\n                });\n              }\n            });\n          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {\n            return params.push({\n              name: input.name,\n              value: input.value\n            });\n          }\n        });\n        if (additionalParam) {\n          params.push(additionalParam);\n        }\n        return params.map(function(param) {\n          if (param.name != null) {\n            return (encodeURIComponent(param.name)) + \"=\" + (encodeURIComponent(param.value));\n          } else {\n            return param;\n          }\n        }).join('&');\n      };\n\n      Rails.formElements = function(form, selector) {\n        if (matches(form, 'form')) {\n          return toArray(form.elements).filter(function(el) {\n            return matches(el, selector);\n          });\n        } else {\n          return toArray(form.querySelectorAll(selector));\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var allowAction, fire, stopEverything;\n\n      fire = Rails.fire, stopEverything = Rails.stopEverything;\n\n      Rails.handleConfirm = function(e) {\n        if (!allowAction(this)) {\n          return stopEverything(e);\n        }\n      };\n\n      allowAction = function(element) {\n        var answer, callback, message;\n        message = element.getAttribute('data-confirm');\n        if (!message) {\n          return true;\n        }\n        answer = false;\n        if (fire(element, 'confirm')) {\n          try {\n            answer = confirm(message);\n          } catch (error) {}\n          callback = fire(element, 'confirm:complete', [answer]);\n        }\n        return answer && callback;\n      };\n\n    }).call(this);\n    (function() {\n      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, matches, setData, stopEverything;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;\n\n      Rails.handleDisabledElement = function(e) {\n        var element;\n        element = this;\n        if (element.disabled) {\n          return stopEverything(e);\n        }\n      };\n\n      Rails.enableElement = function(e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return enableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {\n          return enableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return enableFormElements(element);\n        }\n      };\n\n      Rails.disableElement = function(e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return disableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {\n          return disableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return disableFormElements(element);\n        }\n      };\n\n      disableLinkElement = function(element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          setData(element, 'ujs:enable-with', element.innerHTML);\n          element.innerHTML = replacement;\n        }\n        element.addEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableLinkElement = function(element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          element.innerHTML = originalText;\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.removeEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', null);\n      };\n\n      disableFormElements = function(form) {\n        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);\n      };\n\n      disableFormElement = function(element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          if (matches(element, 'button')) {\n            setData(element, 'ujs:enable-with', element.innerHTML);\n            element.innerHTML = replacement;\n          } else {\n            setData(element, 'ujs:enable-with', element.value);\n            element.value = replacement;\n          }\n        }\n        element.disabled = true;\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableFormElements = function(form) {\n        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);\n      };\n\n      enableFormElement = function(element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          if (matches(element, 'button')) {\n            element.innerHTML = originalText;\n          } else {\n            element.value = originalText;\n          }\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.disabled = false;\n        return setData(element, 'ujs:disabled', null);\n      };\n\n    }).call(this);\n    (function() {\n      var stopEverything;\n\n      stopEverything = Rails.stopEverything;\n\n      Rails.handleMethod = function(e) {\n        var csrfParam, csrfToken, form, formContent, href, link, method;\n        link = this;\n        method = link.getAttribute('data-method');\n        if (!method) {\n          return;\n        }\n        href = Rails.href(link);\n        csrfToken = Rails.csrfToken();\n        csrfParam = Rails.csrfParam();\n        form = document.createElement('form');\n        formContent = \"<input name='_method' value='\" + method + \"' type='hidden' />\";\n        if ((csrfParam != null) && (csrfToken != null) && !Rails.isCrossDomain(href)) {\n          formContent += \"<input name='\" + csrfParam + \"' value='\" + csrfToken + \"' type='hidden' />\";\n        }\n        formContent += '<input type=\"submit\" />';\n        form.method = 'post';\n        form.action = href;\n        form.target = link.target;\n        form.innerHTML = formContent;\n        form.style.display = 'none';\n        document.body.appendChild(form);\n        form.querySelector('[type=\"submit\"]').click();\n        return stopEverything(e);\n      };\n\n    }).call(this);\n    (function() {\n      var ajax, fire, getData, isCrossDomain, isRemote, matches, serializeElement, setData, stopEverything,\n        slice = [].slice;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;\n\n      isRemote = function(element) {\n        var value;\n        value = element.getAttribute('data-remote');\n        return (value != null) && value !== 'false';\n      };\n\n      Rails.handleRemote = function(e) {\n        var button, data, dataType, element, method, url, withCredentials;\n        element = this;\n        if (!isRemote(element)) {\n          return true;\n        }\n        if (!fire(element, 'ajax:before')) {\n          fire(element, 'ajax:stopped');\n          return false;\n        }\n        withCredentials = element.getAttribute('data-with-credentials');\n        dataType = element.getAttribute('data-type') || 'script';\n        if (matches(element, Rails.formSubmitSelector)) {\n          button = getData(element, 'ujs:submit-button');\n          method = getData(element, 'ujs:submit-button-formmethod') || element.method;\n          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;\n          if (method.toUpperCase() === 'GET') {\n            url = url.replace(/\\?.*$/, '');\n          }\n          if (element.enctype === 'multipart/form-data') {\n            data = new FormData(element);\n            if (button != null) {\n              data.append(button.name, button.value);\n            }\n          } else {\n            data = serializeElement(element, button);\n          }\n          setData(element, 'ujs:submit-button', null);\n          setData(element, 'ujs:submit-button-formmethod', null);\n          setData(element, 'ujs:submit-button-formaction', null);\n        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {\n          method = element.getAttribute('data-method');\n          url = element.getAttribute('data-url');\n          data = serializeElement(element, element.getAttribute('data-params'));\n        } else {\n          method = element.getAttribute('data-method');\n          url = Rails.href(element);\n          data = element.getAttribute('data-params');\n        }\n        ajax({\n          type: method || 'GET',\n          url: url,\n          data: data,\n          dataType: dataType,\n          beforeSend: function(xhr, options) {\n            if (fire(element, 'ajax:beforeSend', [xhr, options])) {\n              return fire(element, 'ajax:send', [xhr]);\n            } else {\n              fire(element, 'ajax:stopped');\n              return xhr.abort();\n            }\n          },\n          success: function() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:success', args);\n          },\n          error: function() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:error', args);\n          },\n          complete: function() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:complete', args);\n          },\n          crossDomain: isCrossDomain(url),\n          withCredentials: (withCredentials != null) && withCredentials !== 'false'\n        });\n        return stopEverything(e);\n      };\n\n      Rails.formSubmitButtonClick = function(e) {\n        var button, form;\n        button = this;\n        form = button.form;\n        if (!form) {\n          return;\n        }\n        if (button.name) {\n          setData(form, 'ujs:submit-button', {\n            name: button.name,\n            value: button.value\n          });\n        }\n        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);\n        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));\n        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));\n      };\n\n      Rails.handleMetaClick = function(e) {\n        var data, link, metaClick, method;\n        link = this;\n        method = (link.getAttribute('data-method') || 'GET').toUpperCase();\n        data = link.getAttribute('data-params');\n        metaClick = e.metaKey || e.ctrlKey;\n        if (metaClick && method === 'GET' && !data) {\n          return e.stopImmediatePropagation();\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMetaClick, handleMethod, handleRemote, refreshCSRFTokens;\n\n      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMetaClick = Rails.handleMetaClick, handleMethod = Rails.handleMethod;\n\n      if ((typeof jQuery !== \"undefined\" && jQuery !== null) && (jQuery.ajax != null) && !jQuery.rails) {\n        jQuery.rails = Rails;\n        jQuery.ajaxPrefilter(function(options, originalOptions, xhr) {\n          if (!options.crossDomain) {\n            return CSRFProtection(xhr);\n          }\n        });\n      }\n\n      Rails.start = function() {\n        if (window._rails_loaded) {\n          throw new Error('rails-ujs has already been loaded!');\n        }\n        window.addEventListener('pageshow', function() {\n          $(Rails.formEnableSelector).forEach(function(el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n          return $(Rails.linkDisableSelector).forEach(function(el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n        });\n        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.linkClickSelector, 'click', handleMetaClick);\n        delegate(document, Rails.linkClickSelector, 'click', disableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleRemote);\n        delegate(document, Rails.linkClickSelector, 'click', handleMethod);\n        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.buttonClickSelector, 'click', disableElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);\n        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);\n        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);\n        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', function(e) {\n          return setTimeout((function() {\n            return disableElement(e);\n          }), 13);\n        });\n        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);\n        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);\n        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);\n        return window._rails_loaded = true;\n      };\n\n      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {\n        Rails.start();\n      }\n\n    }).call(this);\n  }).call(this);\n\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = Rails;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(Rails);\n  }\n}).call(this);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rails-ujs/lib/assets/compiled/rails-ujs.js"],"sourceRoot":""}