{"version":3,"sources":["webpack:///core/public.js","webpack:///app/javascript/mnt/gentoo/home/haelwenn/Sources/git/hacktivis.me/git/mastofe/app/javascript/core/public.js","webpack:///./node_modules/rails-ujs/lib/assets/compiled/rails-ujs.js"],"names":["webpackJsonp","1178","module","exports","__webpack_require__","_require","delegate","document","_ref","target","button","window","location","href","_ref2","contentEl","parentNode","querySelector","style","display","marginBottom","571","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","context","this","Rails","linkClickSelector","buttonClickSelector","selector","exclude","inputChangeSelector","formSubmitSelector","formInputClickSelector","formDisableSelector","formEnableSelector","fileInputSelector","linkDisableSelector","buttonDisableSelector","call","expando","m","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","getData","key","ref","setData","value","$","Array","slice","querySelectorAll","csrfParam","csrfToken","meta","content","CSRFProtection","xhr","token","setRequestHeader","refreshCSRFTokens","param","forEach","input","CustomEvent","fire","event","params","evt","createEvent","initCustomEvent","bubbles","cancelable","detail","Event","obj","name","data","dispatchEvent","defaultPrevented","stopEverything","e","preventDefault","stopPropagation","stopImmediatePropagation","eventType","handler","addEventListener","AcceptHeaders","createXHR","prepareOptions","processResponse","*","text","html","xml","json","script","ajax","options","response","getResponseHeader","Math","floor","status","success","statusText","error","complete","beforeSend","readyState","XMLHttpRequest","OPENED","send","url","type","toUpperCase","indexOf","dataType","accept","done","open","crossDomain","withCredentials","onreadystatechange","DONE","parser","match","JSON","parse","createElement","head","appendChild","removeChild","DOMParser","replace","parseFromString","isCrossDomain","originAnchor","urlAnchor","protocol","host","toArray","serializeElement","additionalParam","inputs","elements","option","selected","push","checked","map","encodeURIComponent","join","formElements","form","filter","el","allowAction","handleConfirm","answer","callback","message","getAttribute","confirm","disableFormElement","disableFormElements","disableLinkElement","enableFormElement","enableFormElements","enableLinkElement","handleDisabledElement","disabled","enableElement","disableElement","replacement","innerHTML","originalText","removeEventListener","handleMethod","formContent","link","method","action","body","click","isRemote","handleRemote","enctype","FormData","append","abort","args","arguments","length","formSubmitButtonClick","formNoValidate","handleMetaClick","metaKey","ctrlKey","jQuery","rails","ajaxPrefilter","originalOptions","start","_rails_loaded","Error","setTimeout","undefined"],"mappings":"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","file":"core/public.js","sourcesContent":["webpackJsonp([161],{\n\n/***/ 1178:\n/***/ (function(module, exports, __webpack_require__) {\n\n//  This file will be loaded on public pages, regardless of theme.\n\nvar _require = __webpack_require__(571),\n    delegate = _require.delegate;\n\ndelegate(document, '.webapp-btn', 'click', function (_ref) {\n  var target = _ref.target,\n      button = _ref.button;\n\n  if (button !== 0) {\n    return true;\n  }\n  window.location.href = target.href;\n  return false;\n});\n\ndelegate(document, '.status__content__spoiler-link', 'click', function (_ref2) {\n  var target = _ref2.target;\n\n  var contentEl = target.parentNode.parentNode.querySelector('.e-content');\n\n  if (contentEl.style.display === 'block') {\n    contentEl.style.display = 'none';\n    target.parentNode.style.marginBottom = 0;\n  } else {\n    contentEl.style.display = 'block';\n    target.parentNode.style.marginBottom = null;\n  }\n\n  return false;\n});\n\n/***/ }),\n\n/***/ 571:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\nUnobtrusive JavaScript\nhttps://github.com/rails/rails/blob/master/actionview/app/assets/javascripts\nReleased under the MIT license\n */\n\n(function () {\n  var context = this;\n\n  (function () {\n    (function () {\n      this.Rails = {\n        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',\n        buttonClickSelector: {\n          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',\n          exclude: 'form button'\n        },\n        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n        formSubmitSelector: 'form',\n        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n        fileInputSelector: 'input[name][type=file]:not([disabled])',\n        linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'\n      };\n    }).call(this);\n  }).call(context);\n\n  var Rails = context.Rails;\n\n  (function () {\n    (function () {\n      var expando, m;\n\n      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n      Rails.matches = function (element, selector) {\n        if (selector.exclude != null) {\n          return m.call(element, selector.selector) && !m.call(element, selector.exclude);\n        } else {\n          return m.call(element, selector);\n        }\n      };\n\n      expando = '_ujsData';\n\n      Rails.getData = function (element, key) {\n        var ref;\n        return (ref = element[expando]) != null ? ref[key] : void 0;\n      };\n\n      Rails.setData = function (element, key, value) {\n        if (element[expando] == null) {\n          element[expando] = {};\n        }\n        return element[expando][key] = value;\n      };\n\n      Rails.$ = function (selector) {\n        return Array.prototype.slice.call(document.querySelectorAll(selector));\n      };\n    }).call(this);\n    (function () {\n      var $, csrfParam, csrfToken;\n\n      $ = Rails.$;\n\n      csrfToken = Rails.csrfToken = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-token]');\n        return meta && meta.content;\n      };\n\n      csrfParam = Rails.csrfParam = function () {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-param]');\n        return meta && meta.content;\n      };\n\n      Rails.CSRFProtection = function (xhr) {\n        var token;\n        token = csrfToken();\n        if (token != null) {\n          return xhr.setRequestHeader('X-CSRF-Token', token);\n        }\n      };\n\n      Rails.refreshCSRFTokens = function () {\n        var param, token;\n        token = csrfToken();\n        param = csrfParam();\n        if (token != null && param != null) {\n          return $('form input[name=\"' + param + '\"]').forEach(function (input) {\n            return input.value = token;\n          });\n        }\n      };\n    }).call(this);\n    (function () {\n      var CustomEvent, fire, matches;\n\n      matches = Rails.matches;\n\n      CustomEvent = window.CustomEvent;\n\n      if (typeof CustomEvent !== 'function') {\n        CustomEvent = function (event, params) {\n          var evt;\n          evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n          return evt;\n        };\n        CustomEvent.prototype = window.Event.prototype;\n      }\n\n      fire = Rails.fire = function (obj, name, data) {\n        var event;\n        event = new CustomEvent(name, {\n          bubbles: true,\n          cancelable: true,\n          detail: data\n        });\n        obj.dispatchEvent(event);\n        return !event.defaultPrevented;\n      };\n\n      Rails.stopEverything = function (e) {\n        fire(e.target, 'ujs:everythingStopped');\n        e.preventDefault();\n        e.stopPropagation();\n        return e.stopImmediatePropagation();\n      };\n\n      Rails.delegate = function (element, selector, eventType, handler) {\n        return element.addEventListener(eventType, function (e) {\n          var target;\n          target = e.target;\n          while (!(!(target instanceof Element) || matches(target, selector))) {\n            target = target.parentNode;\n          }\n          if (target instanceof Element && handler.call(target, e) === false) {\n            e.preventDefault();\n            return e.stopPropagation();\n          }\n        });\n      };\n    }).call(this);\n    (function () {\n      var AcceptHeaders, CSRFProtection, createXHR, fire, prepareOptions, processResponse;\n\n      CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;\n\n      AcceptHeaders = {\n        '*': '*/*',\n        text: 'text/plain',\n        html: 'text/html',\n        xml: 'application/xml, text/xml',\n        json: 'application/json, text/javascript',\n        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'\n      };\n\n      Rails.ajax = function (options) {\n        var xhr;\n        options = prepareOptions(options);\n        xhr = createXHR(options, function () {\n          var response;\n          response = processResponse(xhr.response, xhr.getResponseHeader('Content-Type'));\n          if (Math.floor(xhr.status / 100) === 2) {\n            if (typeof options.success === \"function\") {\n              options.success(response, xhr.statusText, xhr);\n            }\n          } else {\n            if (typeof options.error === \"function\") {\n              options.error(response, xhr.statusText, xhr);\n            }\n          }\n          return typeof options.complete === \"function\" ? options.complete(xhr, xhr.statusText) : void 0;\n        });\n        if (typeof options.beforeSend === \"function\") {\n          options.beforeSend(xhr, options);\n        }\n        if (xhr.readyState === XMLHttpRequest.OPENED) {\n          return xhr.send(options.data);\n        } else {\n          return fire(document, 'ajaxStop');\n        }\n      };\n\n      prepareOptions = function (options) {\n        options.url = options.url || location.href;\n        options.type = options.type.toUpperCase();\n        if (options.type === 'GET' && options.data) {\n          if (options.url.indexOf('?') < 0) {\n            options.url += '?' + options.data;\n          } else {\n            options.url += '&' + options.data;\n          }\n        }\n        if (AcceptHeaders[options.dataType] == null) {\n          options.dataType = '*';\n        }\n        options.accept = AcceptHeaders[options.dataType];\n        if (options.dataType !== '*') {\n          options.accept += ', */*; q=0.01';\n        }\n        return options;\n      };\n\n      createXHR = function (options, done) {\n        var xhr;\n        xhr = new XMLHttpRequest();\n        xhr.open(options.type, options.url, true);\n        xhr.setRequestHeader('Accept', options.accept);\n        if (typeof options.data === 'string') {\n          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        }\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n        CSRFProtection(xhr);\n        xhr.withCredentials = !!options.withCredentials;\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === XMLHttpRequest.DONE) {\n            return done(xhr);\n          }\n        };\n        return xhr;\n      };\n\n      processResponse = function (response, type) {\n        var parser, script;\n        if (typeof response === 'string' && typeof type === 'string') {\n          if (type.match(/\\bjson\\b/)) {\n            try {\n              response = JSON.parse(response);\n            } catch (error) {}\n          } else if (type.match(/\\b(?:java|ecma)script\\b/)) {\n            script = document.createElement('script');\n            script.text = response;\n            document.head.appendChild(script).parentNode.removeChild(script);\n          } else if (type.match(/\\b(xml|html|svg)\\b/)) {\n            parser = new DOMParser();\n            type = type.replace(/;.+/, '');\n            try {\n              response = parser.parseFromString(response, type);\n            } catch (error) {}\n          }\n        }\n        return response;\n      };\n\n      Rails.href = function (element) {\n        return element.href;\n      };\n\n      Rails.isCrossDomain = function (url) {\n        var e, originAnchor, urlAnchor;\n        originAnchor = document.createElement('a');\n        originAnchor.href = location.href;\n        urlAnchor = document.createElement('a');\n        try {\n          urlAnchor.href = url;\n          return !((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host || originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host);\n        } catch (error) {\n          e = error;\n          return true;\n        }\n      };\n    }).call(this);\n    (function () {\n      var matches, toArray;\n\n      matches = Rails.matches;\n\n      toArray = function (e) {\n        return Array.prototype.slice.call(e);\n      };\n\n      Rails.serializeElement = function (element, additionalParam) {\n        var inputs, params;\n        inputs = [element];\n        if (matches(element, 'form')) {\n          inputs = toArray(element.elements);\n        }\n        params = [];\n        inputs.forEach(function (input) {\n          if (!input.name) {\n            return;\n          }\n          if (matches(input, 'select')) {\n            return toArray(input.options).forEach(function (option) {\n              if (option.selected) {\n                return params.push({\n                  name: input.name,\n                  value: option.value\n                });\n              }\n            });\n          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {\n            return params.push({\n              name: input.name,\n              value: input.value\n            });\n          }\n        });\n        if (additionalParam) {\n          params.push(additionalParam);\n        }\n        return params.map(function (param) {\n          if (param.name != null) {\n            return encodeURIComponent(param.name) + \"=\" + encodeURIComponent(param.value);\n          } else {\n            return param;\n          }\n        }).join('&');\n      };\n\n      Rails.formElements = function (form, selector) {\n        if (matches(form, 'form')) {\n          return toArray(form.elements).filter(function (el) {\n            return matches(el, selector);\n          });\n        } else {\n          return toArray(form.querySelectorAll(selector));\n        }\n      };\n    }).call(this);\n    (function () {\n      var allowAction, fire, stopEverything;\n\n      fire = Rails.fire, stopEverything = Rails.stopEverything;\n\n      Rails.handleConfirm = function (e) {\n        if (!allowAction(this)) {\n          return stopEverything(e);\n        }\n      };\n\n      allowAction = function (element) {\n        var answer, callback, message;\n        message = element.getAttribute('data-confirm');\n        if (!message) {\n          return true;\n        }\n        answer = false;\n        if (fire(element, 'confirm')) {\n          try {\n            answer = confirm(message);\n          } catch (error) {}\n          callback = fire(element, 'confirm:complete', [answer]);\n        }\n        return answer && callback;\n      };\n    }).call(this);\n    (function () {\n      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, matches, setData, stopEverything;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;\n\n      Rails.handleDisabledElement = function (e) {\n        var element;\n        element = this;\n        if (element.disabled) {\n          return stopEverything(e);\n        }\n      };\n\n      Rails.enableElement = function (e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return enableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {\n          return enableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return enableFormElements(element);\n        }\n      };\n\n      Rails.disableElement = function (e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return disableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {\n          return disableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return disableFormElements(element);\n        }\n      };\n\n      disableLinkElement = function (element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          setData(element, 'ujs:enable-with', element.innerHTML);\n          element.innerHTML = replacement;\n        }\n        element.addEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableLinkElement = function (element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          element.innerHTML = originalText;\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.removeEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', null);\n      };\n\n      disableFormElements = function (form) {\n        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);\n      };\n\n      disableFormElement = function (element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          if (matches(element, 'button')) {\n            setData(element, 'ujs:enable-with', element.innerHTML);\n            element.innerHTML = replacement;\n          } else {\n            setData(element, 'ujs:enable-with', element.value);\n            element.value = replacement;\n          }\n        }\n        element.disabled = true;\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableFormElements = function (form) {\n        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);\n      };\n\n      enableFormElement = function (element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          if (matches(element, 'button')) {\n            element.innerHTML = originalText;\n          } else {\n            element.value = originalText;\n          }\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.disabled = false;\n        return setData(element, 'ujs:disabled', null);\n      };\n    }).call(this);\n    (function () {\n      var stopEverything;\n\n      stopEverything = Rails.stopEverything;\n\n      Rails.handleMethod = function (e) {\n        var csrfParam, csrfToken, form, formContent, href, link, method;\n        link = this;\n        method = link.getAttribute('data-method');\n        if (!method) {\n          return;\n        }\n        href = Rails.href(link);\n        csrfToken = Rails.csrfToken();\n        csrfParam = Rails.csrfParam();\n        form = document.createElement('form');\n        formContent = \"<input name='_method' value='\" + method + \"' type='hidden' />\";\n        if (csrfParam != null && csrfToken != null && !Rails.isCrossDomain(href)) {\n          formContent += \"<input name='\" + csrfParam + \"' value='\" + csrfToken + \"' type='hidden' />\";\n        }\n        formContent += '<input type=\"submit\" />';\n        form.method = 'post';\n        form.action = href;\n        form.target = link.target;\n        form.innerHTML = formContent;\n        form.style.display = 'none';\n        document.body.appendChild(form);\n        form.querySelector('[type=\"submit\"]').click();\n        return stopEverything(e);\n      };\n    }).call(this);\n    (function () {\n      var ajax,\n          fire,\n          getData,\n          isCrossDomain,\n          isRemote,\n          matches,\n          serializeElement,\n          setData,\n          stopEverything,\n          slice = [].slice;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;\n\n      isRemote = function (element) {\n        var value;\n        value = element.getAttribute('data-remote');\n        return value != null && value !== 'false';\n      };\n\n      Rails.handleRemote = function (e) {\n        var button, data, dataType, element, method, url, withCredentials;\n        element = this;\n        if (!isRemote(element)) {\n          return true;\n        }\n        if (!fire(element, 'ajax:before')) {\n          fire(element, 'ajax:stopped');\n          return false;\n        }\n        withCredentials = element.getAttribute('data-with-credentials');\n        dataType = element.getAttribute('data-type') || 'script';\n        if (matches(element, Rails.formSubmitSelector)) {\n          button = getData(element, 'ujs:submit-button');\n          method = getData(element, 'ujs:submit-button-formmethod') || element.method;\n          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;\n          if (method.toUpperCase() === 'GET') {\n            url = url.replace(/\\?.*$/, '');\n          }\n          if (element.enctype === 'multipart/form-data') {\n            data = new FormData(element);\n            if (button != null) {\n              data.append(button.name, button.value);\n            }\n          } else {\n            data = serializeElement(element, button);\n          }\n          setData(element, 'ujs:submit-button', null);\n          setData(element, 'ujs:submit-button-formmethod', null);\n          setData(element, 'ujs:submit-button-formaction', null);\n        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {\n          method = element.getAttribute('data-method');\n          url = element.getAttribute('data-url');\n          data = serializeElement(element, element.getAttribute('data-params'));\n        } else {\n          method = element.getAttribute('data-method');\n          url = Rails.href(element);\n          data = element.getAttribute('data-params');\n        }\n        ajax({\n          type: method || 'GET',\n          url: url,\n          data: data,\n          dataType: dataType,\n          beforeSend: function (xhr, options) {\n            if (fire(element, 'ajax:beforeSend', [xhr, options])) {\n              return fire(element, 'ajax:send', [xhr]);\n            } else {\n              fire(element, 'ajax:stopped');\n              return xhr.abort();\n            }\n          },\n          success: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:success', args);\n          },\n          error: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:error', args);\n          },\n          complete: function () {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:complete', args);\n          },\n          crossDomain: isCrossDomain(url),\n          withCredentials: withCredentials != null && withCredentials !== 'false'\n        });\n        return stopEverything(e);\n      };\n\n      Rails.formSubmitButtonClick = function (e) {\n        var button, form;\n        button = this;\n        form = button.form;\n        if (!form) {\n          return;\n        }\n        if (button.name) {\n          setData(form, 'ujs:submit-button', {\n            name: button.name,\n            value: button.value\n          });\n        }\n        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);\n        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));\n        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));\n      };\n\n      Rails.handleMetaClick = function (e) {\n        var data, link, metaClick, method;\n        link = this;\n        method = (link.getAttribute('data-method') || 'GET').toUpperCase();\n        data = link.getAttribute('data-params');\n        metaClick = e.metaKey || e.ctrlKey;\n        if (metaClick && method === 'GET' && !data) {\n          return e.stopImmediatePropagation();\n        }\n      };\n    }).call(this);\n    (function () {\n      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMetaClick, handleMethod, handleRemote, refreshCSRFTokens;\n\n      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMetaClick = Rails.handleMetaClick, handleMethod = Rails.handleMethod;\n\n      if (typeof jQuery !== \"undefined\" && jQuery !== null && jQuery.ajax != null && !jQuery.rails) {\n        jQuery.rails = Rails;\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (!options.crossDomain) {\n            return CSRFProtection(xhr);\n          }\n        });\n      }\n\n      Rails.start = function () {\n        if (window._rails_loaded) {\n          throw new Error('rails-ujs has already been loaded!');\n        }\n        window.addEventListener('pageshow', function () {\n          $(Rails.formEnableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n          return $(Rails.linkDisableSelector).forEach(function (el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n        });\n        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.linkClickSelector, 'click', handleMetaClick);\n        delegate(document, Rails.linkClickSelector, 'click', disableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleRemote);\n        delegate(document, Rails.linkClickSelector, 'click', handleMethod);\n        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.buttonClickSelector, 'click', disableElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);\n        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);\n        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);\n        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', function (e) {\n          return setTimeout(function () {\n            return disableElement(e);\n          }, 13);\n        });\n        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);\n        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);\n        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);\n        return window._rails_loaded = true;\n      };\n\n      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {\n        Rails.start();\n      }\n    }).call(this);\n  }).call(this);\n\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = Rails;\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (Rails),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n}).call(this);\n\n/***/ })\n\n},[1178]);\n\n\n// WEBPACK FOOTER //\n// core/public.js","//  This file will be loaded on public pages, regardless of theme.\n\nconst { delegate } = require('rails-ujs');\n\ndelegate(document, '.webapp-btn', 'click', ({ target, button }) => {\n  if (button !== 0) {\n    return true;\n  }\n  window.location.href = target.href;\n  return false;\n});\n\ndelegate(document, '.status__content__spoiler-link', 'click', ({ target }) => {\n  const contentEl = target.parentNode.parentNode.querySelector('.e-content');\n\n  if (contentEl.style.display === 'block') {\n    contentEl.style.display = 'none';\n    target.parentNode.style.marginBottom = 0;\n  } else {\n    contentEl.style.display = 'block';\n    target.parentNode.style.marginBottom = null;\n  }\n\n  return false;\n});\n\n\n\n// WEBPACK FOOTER //\n// app/javascript/mnt/gentoo/home/haelwenn/Sources/git/hacktivis.me/git/mastofe/app/javascript/core/public.js","/*\nUnobtrusive JavaScript\nhttps://github.com/rails/rails/blob/master/actionview/app/assets/javascripts\nReleased under the MIT license\n */\n\n(function() {\n  var context = this;\n\n  (function() {\n    (function() {\n      this.Rails = {\n        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',\n        buttonClickSelector: {\n          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',\n          exclude: 'form button'\n        },\n        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n        formSubmitSelector: 'form',\n        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n        fileInputSelector: 'input[name][type=file]:not([disabled])',\n        linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'\n      };\n\n    }).call(this);\n  }).call(context);\n\n  var Rails = context.Rails;\n\n  (function() {\n    (function() {\n      var expando, m;\n\n      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n      Rails.matches = function(element, selector) {\n        if (selector.exclude != null) {\n          return m.call(element, selector.selector) && !m.call(element, selector.exclude);\n        } else {\n          return m.call(element, selector);\n        }\n      };\n\n      expando = '_ujsData';\n\n      Rails.getData = function(element, key) {\n        var ref;\n        return (ref = element[expando]) != null ? ref[key] : void 0;\n      };\n\n      Rails.setData = function(element, key, value) {\n        if (element[expando] == null) {\n          element[expando] = {};\n        }\n        return element[expando][key] = value;\n      };\n\n      Rails.$ = function(selector) {\n        return Array.prototype.slice.call(document.querySelectorAll(selector));\n      };\n\n    }).call(this);\n    (function() {\n      var $, csrfParam, csrfToken;\n\n      $ = Rails.$;\n\n      csrfToken = Rails.csrfToken = function() {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-token]');\n        return meta && meta.content;\n      };\n\n      csrfParam = Rails.csrfParam = function() {\n        var meta;\n        meta = document.querySelector('meta[name=csrf-param]');\n        return meta && meta.content;\n      };\n\n      Rails.CSRFProtection = function(xhr) {\n        var token;\n        token = csrfToken();\n        if (token != null) {\n          return xhr.setRequestHeader('X-CSRF-Token', token);\n        }\n      };\n\n      Rails.refreshCSRFTokens = function() {\n        var param, token;\n        token = csrfToken();\n        param = csrfParam();\n        if ((token != null) && (param != null)) {\n          return $('form input[name=\"' + param + '\"]').forEach(function(input) {\n            return input.value = token;\n          });\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var CustomEvent, fire, matches;\n\n      matches = Rails.matches;\n\n      CustomEvent = window.CustomEvent;\n\n      if (typeof CustomEvent !== 'function') {\n        CustomEvent = function(event, params) {\n          var evt;\n          evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n          return evt;\n        };\n        CustomEvent.prototype = window.Event.prototype;\n      }\n\n      fire = Rails.fire = function(obj, name, data) {\n        var event;\n        event = new CustomEvent(name, {\n          bubbles: true,\n          cancelable: true,\n          detail: data\n        });\n        obj.dispatchEvent(event);\n        return !event.defaultPrevented;\n      };\n\n      Rails.stopEverything = function(e) {\n        fire(e.target, 'ujs:everythingStopped');\n        e.preventDefault();\n        e.stopPropagation();\n        return e.stopImmediatePropagation();\n      };\n\n      Rails.delegate = function(element, selector, eventType, handler) {\n        return element.addEventListener(eventType, function(e) {\n          var target;\n          target = e.target;\n          while (!(!(target instanceof Element) || matches(target, selector))) {\n            target = target.parentNode;\n          }\n          if (target instanceof Element && handler.call(target, e) === false) {\n            e.preventDefault();\n            return e.stopPropagation();\n          }\n        });\n      };\n\n    }).call(this);\n    (function() {\n      var AcceptHeaders, CSRFProtection, createXHR, fire, prepareOptions, processResponse;\n\n      CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;\n\n      AcceptHeaders = {\n        '*': '*/*',\n        text: 'text/plain',\n        html: 'text/html',\n        xml: 'application/xml, text/xml',\n        json: 'application/json, text/javascript',\n        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'\n      };\n\n      Rails.ajax = function(options) {\n        var xhr;\n        options = prepareOptions(options);\n        xhr = createXHR(options, function() {\n          var response;\n          response = processResponse(xhr.response, xhr.getResponseHeader('Content-Type'));\n          if (Math.floor(xhr.status / 100) === 2) {\n            if (typeof options.success === \"function\") {\n              options.success(response, xhr.statusText, xhr);\n            }\n          } else {\n            if (typeof options.error === \"function\") {\n              options.error(response, xhr.statusText, xhr);\n            }\n          }\n          return typeof options.complete === \"function\" ? options.complete(xhr, xhr.statusText) : void 0;\n        });\n        if (typeof options.beforeSend === \"function\") {\n          options.beforeSend(xhr, options);\n        }\n        if (xhr.readyState === XMLHttpRequest.OPENED) {\n          return xhr.send(options.data);\n        } else {\n          return fire(document, 'ajaxStop');\n        }\n      };\n\n      prepareOptions = function(options) {\n        options.url = options.url || location.href;\n        options.type = options.type.toUpperCase();\n        if (options.type === 'GET' && options.data) {\n          if (options.url.indexOf('?') < 0) {\n            options.url += '?' + options.data;\n          } else {\n            options.url += '&' + options.data;\n          }\n        }\n        if (AcceptHeaders[options.dataType] == null) {\n          options.dataType = '*';\n        }\n        options.accept = AcceptHeaders[options.dataType];\n        if (options.dataType !== '*') {\n          options.accept += ', */*; q=0.01';\n        }\n        return options;\n      };\n\n      createXHR = function(options, done) {\n        var xhr;\n        xhr = new XMLHttpRequest();\n        xhr.open(options.type, options.url, true);\n        xhr.setRequestHeader('Accept', options.accept);\n        if (typeof options.data === 'string') {\n          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        }\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n        CSRFProtection(xhr);\n        xhr.withCredentials = !!options.withCredentials;\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === XMLHttpRequest.DONE) {\n            return done(xhr);\n          }\n        };\n        return xhr;\n      };\n\n      processResponse = function(response, type) {\n        var parser, script;\n        if (typeof response === 'string' && typeof type === 'string') {\n          if (type.match(/\\bjson\\b/)) {\n            try {\n              response = JSON.parse(response);\n            } catch (error) {}\n          } else if (type.match(/\\b(?:java|ecma)script\\b/)) {\n            script = document.createElement('script');\n            script.text = response;\n            document.head.appendChild(script).parentNode.removeChild(script);\n          } else if (type.match(/\\b(xml|html|svg)\\b/)) {\n            parser = new DOMParser();\n            type = type.replace(/;.+/, '');\n            try {\n              response = parser.parseFromString(response, type);\n            } catch (error) {}\n          }\n        }\n        return response;\n      };\n\n      Rails.href = function(element) {\n        return element.href;\n      };\n\n      Rails.isCrossDomain = function(url) {\n        var e, originAnchor, urlAnchor;\n        originAnchor = document.createElement('a');\n        originAnchor.href = location.href;\n        urlAnchor = document.createElement('a');\n        try {\n          urlAnchor.href = url;\n          return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) || (originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host));\n        } catch (error) {\n          e = error;\n          return true;\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var matches, toArray;\n\n      matches = Rails.matches;\n\n      toArray = function(e) {\n        return Array.prototype.slice.call(e);\n      };\n\n      Rails.serializeElement = function(element, additionalParam) {\n        var inputs, params;\n        inputs = [element];\n        if (matches(element, 'form')) {\n          inputs = toArray(element.elements);\n        }\n        params = [];\n        inputs.forEach(function(input) {\n          if (!input.name) {\n            return;\n          }\n          if (matches(input, 'select')) {\n            return toArray(input.options).forEach(function(option) {\n              if (option.selected) {\n                return params.push({\n                  name: input.name,\n                  value: option.value\n                });\n              }\n            });\n          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {\n            return params.push({\n              name: input.name,\n              value: input.value\n            });\n          }\n        });\n        if (additionalParam) {\n          params.push(additionalParam);\n        }\n        return params.map(function(param) {\n          if (param.name != null) {\n            return (encodeURIComponent(param.name)) + \"=\" + (encodeURIComponent(param.value));\n          } else {\n            return param;\n          }\n        }).join('&');\n      };\n\n      Rails.formElements = function(form, selector) {\n        if (matches(form, 'form')) {\n          return toArray(form.elements).filter(function(el) {\n            return matches(el, selector);\n          });\n        } else {\n          return toArray(form.querySelectorAll(selector));\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var allowAction, fire, stopEverything;\n\n      fire = Rails.fire, stopEverything = Rails.stopEverything;\n\n      Rails.handleConfirm = function(e) {\n        if (!allowAction(this)) {\n          return stopEverything(e);\n        }\n      };\n\n      allowAction = function(element) {\n        var answer, callback, message;\n        message = element.getAttribute('data-confirm');\n        if (!message) {\n          return true;\n        }\n        answer = false;\n        if (fire(element, 'confirm')) {\n          try {\n            answer = confirm(message);\n          } catch (error) {}\n          callback = fire(element, 'confirm:complete', [answer]);\n        }\n        return answer && callback;\n      };\n\n    }).call(this);\n    (function() {\n      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, matches, setData, stopEverything;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;\n\n      Rails.handleDisabledElement = function(e) {\n        var element;\n        element = this;\n        if (element.disabled) {\n          return stopEverything(e);\n        }\n      };\n\n      Rails.enableElement = function(e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return enableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {\n          return enableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return enableFormElements(element);\n        }\n      };\n\n      Rails.disableElement = function(e) {\n        var element;\n        element = e instanceof Event ? e.target : e;\n        if (matches(element, Rails.linkDisableSelector)) {\n          return disableLinkElement(element);\n        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {\n          return disableFormElement(element);\n        } else if (matches(element, Rails.formSubmitSelector)) {\n          return disableFormElements(element);\n        }\n      };\n\n      disableLinkElement = function(element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          setData(element, 'ujs:enable-with', element.innerHTML);\n          element.innerHTML = replacement;\n        }\n        element.addEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableLinkElement = function(element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          element.innerHTML = originalText;\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.removeEventListener('click', stopEverything);\n        return setData(element, 'ujs:disabled', null);\n      };\n\n      disableFormElements = function(form) {\n        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);\n      };\n\n      disableFormElement = function(element) {\n        var replacement;\n        replacement = element.getAttribute('data-disable-with');\n        if (replacement != null) {\n          if (matches(element, 'button')) {\n            setData(element, 'ujs:enable-with', element.innerHTML);\n            element.innerHTML = replacement;\n          } else {\n            setData(element, 'ujs:enable-with', element.value);\n            element.value = replacement;\n          }\n        }\n        element.disabled = true;\n        return setData(element, 'ujs:disabled', true);\n      };\n\n      enableFormElements = function(form) {\n        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);\n      };\n\n      enableFormElement = function(element) {\n        var originalText;\n        originalText = getData(element, 'ujs:enable-with');\n        if (originalText != null) {\n          if (matches(element, 'button')) {\n            element.innerHTML = originalText;\n          } else {\n            element.value = originalText;\n          }\n          setData(element, 'ujs:enable-with', null);\n        }\n        element.disabled = false;\n        return setData(element, 'ujs:disabled', null);\n      };\n\n    }).call(this);\n    (function() {\n      var stopEverything;\n\n      stopEverything = Rails.stopEverything;\n\n      Rails.handleMethod = function(e) {\n        var csrfParam, csrfToken, form, formContent, href, link, method;\n        link = this;\n        method = link.getAttribute('data-method');\n        if (!method) {\n          return;\n        }\n        href = Rails.href(link);\n        csrfToken = Rails.csrfToken();\n        csrfParam = Rails.csrfParam();\n        form = document.createElement('form');\n        formContent = \"<input name='_method' value='\" + method + \"' type='hidden' />\";\n        if ((csrfParam != null) && (csrfToken != null) && !Rails.isCrossDomain(href)) {\n          formContent += \"<input name='\" + csrfParam + \"' value='\" + csrfToken + \"' type='hidden' />\";\n        }\n        formContent += '<input type=\"submit\" />';\n        form.method = 'post';\n        form.action = href;\n        form.target = link.target;\n        form.innerHTML = formContent;\n        form.style.display = 'none';\n        document.body.appendChild(form);\n        form.querySelector('[type=\"submit\"]').click();\n        return stopEverything(e);\n      };\n\n    }).call(this);\n    (function() {\n      var ajax, fire, getData, isCrossDomain, isRemote, matches, serializeElement, setData, stopEverything,\n        slice = [].slice;\n\n      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;\n\n      isRemote = function(element) {\n        var value;\n        value = element.getAttribute('data-remote');\n        return (value != null) && value !== 'false';\n      };\n\n      Rails.handleRemote = function(e) {\n        var button, data, dataType, element, method, url, withCredentials;\n        element = this;\n        if (!isRemote(element)) {\n          return true;\n        }\n        if (!fire(element, 'ajax:before')) {\n          fire(element, 'ajax:stopped');\n          return false;\n        }\n        withCredentials = element.getAttribute('data-with-credentials');\n        dataType = element.getAttribute('data-type') || 'script';\n        if (matches(element, Rails.formSubmitSelector)) {\n          button = getData(element, 'ujs:submit-button');\n          method = getData(element, 'ujs:submit-button-formmethod') || element.method;\n          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;\n          if (method.toUpperCase() === 'GET') {\n            url = url.replace(/\\?.*$/, '');\n          }\n          if (element.enctype === 'multipart/form-data') {\n            data = new FormData(element);\n            if (button != null) {\n              data.append(button.name, button.value);\n            }\n          } else {\n            data = serializeElement(element, button);\n          }\n          setData(element, 'ujs:submit-button', null);\n          setData(element, 'ujs:submit-button-formmethod', null);\n          setData(element, 'ujs:submit-button-formaction', null);\n        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {\n          method = element.getAttribute('data-method');\n          url = element.getAttribute('data-url');\n          data = serializeElement(element, element.getAttribute('data-params'));\n        } else {\n          method = element.getAttribute('data-method');\n          url = Rails.href(element);\n          data = element.getAttribute('data-params');\n        }\n        ajax({\n          type: method || 'GET',\n          url: url,\n          data: data,\n          dataType: dataType,\n          beforeSend: function(xhr, options) {\n            if (fire(element, 'ajax:beforeSend', [xhr, options])) {\n              return fire(element, 'ajax:send', [xhr]);\n            } else {\n              fire(element, 'ajax:stopped');\n              return xhr.abort();\n            }\n          },\n          success: function() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:success', args);\n          },\n          error: function() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:error', args);\n          },\n          complete: function() {\n            var args;\n            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n            return fire(element, 'ajax:complete', args);\n          },\n          crossDomain: isCrossDomain(url),\n          withCredentials: (withCredentials != null) && withCredentials !== 'false'\n        });\n        return stopEverything(e);\n      };\n\n      Rails.formSubmitButtonClick = function(e) {\n        var button, form;\n        button = this;\n        form = button.form;\n        if (!form) {\n          return;\n        }\n        if (button.name) {\n          setData(form, 'ujs:submit-button', {\n            name: button.name,\n            value: button.value\n          });\n        }\n        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);\n        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));\n        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));\n      };\n\n      Rails.handleMetaClick = function(e) {\n        var data, link, metaClick, method;\n        link = this;\n        method = (link.getAttribute('data-method') || 'GET').toUpperCase();\n        data = link.getAttribute('data-params');\n        metaClick = e.metaKey || e.ctrlKey;\n        if (metaClick && method === 'GET' && !data) {\n          return e.stopImmediatePropagation();\n        }\n      };\n\n    }).call(this);\n    (function() {\n      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMetaClick, handleMethod, handleRemote, refreshCSRFTokens;\n\n      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMetaClick = Rails.handleMetaClick, handleMethod = Rails.handleMethod;\n\n      if ((typeof jQuery !== \"undefined\" && jQuery !== null) && (jQuery.ajax != null) && !jQuery.rails) {\n        jQuery.rails = Rails;\n        jQuery.ajaxPrefilter(function(options, originalOptions, xhr) {\n          if (!options.crossDomain) {\n            return CSRFProtection(xhr);\n          }\n        });\n      }\n\n      Rails.start = function() {\n        if (window._rails_loaded) {\n          throw new Error('rails-ujs has already been loaded!');\n        }\n        window.addEventListener('pageshow', function() {\n          $(Rails.formEnableSelector).forEach(function(el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n          return $(Rails.linkDisableSelector).forEach(function(el) {\n            if (getData(el, 'ujs:disabled')) {\n              return enableElement(el);\n            }\n          });\n        });\n        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.linkClickSelector, 'click', handleMetaClick);\n        delegate(document, Rails.linkClickSelector, 'click', disableElement);\n        delegate(document, Rails.linkClickSelector, 'click', handleRemote);\n        delegate(document, Rails.linkClickSelector, 'click', handleMethod);\n        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.buttonClickSelector, 'click', disableElement);\n        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);\n        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);\n        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);\n        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);\n        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);\n        delegate(document, Rails.formSubmitSelector, 'submit', function(e) {\n          return setTimeout((function() {\n            return disableElement(e);\n          }), 13);\n        });\n        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);\n        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);\n        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);\n        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);\n        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);\n        return window._rails_loaded = true;\n      };\n\n      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {\n        Rails.start();\n      }\n\n    }).call(this);\n  }).call(this);\n\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = Rails;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(Rails);\n  }\n}).call(this);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/rails-ujs/lib/assets/compiled/rails-ujs.js"],"sourceRoot":""}